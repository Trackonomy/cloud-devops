apiVersion: apps/v1
kind: Deployment
metadata:
  name: ann-rule-engine-{{ .Values.env }}
  namespace: {{ .Values.env }}
  labels:
    app: "ann-rule-engine-{{ .Values.env }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: "ann-rule-engine-{{ .Values.env }}"
  template:
    metadata:
      labels:
        app: "ann-rule-engine-{{ .Values.env }}"
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
      containers:
      - name: "ann-rule-engine"
        {{- if .Values.unprivileged }}
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
        {{- end }}
        image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.image.port }}
        resources:
            requests:
              cpu: {{ default "1000m" .Values.requests.cpu }}
              memory: {{ default "2048Mi" .Values.requests.memory  }}
            limits:
              cpu: {{  default "5000m" .Values.requests.cpu }}
              memory: {{ default "10240Mi" .Values.requests.memory }}
        volumeMounts:
        - name: variables-env
          mountPath: /.env
          subPath: .env
      volumes:
      - name: variables-env
        configMap:
          name: 'ann-rule-engine-{{ .Values.env }}-configmap'
          items:
          - key: .env
            path: .env
  
  

name: Deploy node-dev to cloud
on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: "node-dev branch name"
        required: true
      environment:
        type: environment
jobs:
  deploy_node_dev:
    runs-on: ubuntu-latest
    name: Checkout github repo
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Move terraform folder
      run: mkdir -p /tmp/terraform && cp -Rv terraform/* /tmp/terraform
    - name: Inject secrets
      env:
        TF_BACKEND_CONF_FILE: ${{ secrets.TFBACKEND }}
        TF_VARS_FILE: ${{ env.TFVARS }}
        WORK_DIR: /tmp/terraform
      run: |
        echo $TF_BACKEND_CONF_FILE | base64 --decode > backend.conf
        cp backend.conf ./image_gallery/backends/backend.conf
        cp backend.conf ./node-dev/backends/backend.conf
        echo $TF_VARS_FILE > terraform.tfvars
        cp terraform.tfvars ./image_gallery/terraform.tfvars
        cp terraform.tfvars ./node-dev/terraform.tfvars
    - name: Init terraform
      env:
        TF_LOG: trace
        WORK_DIR: /tmp/terraform/inage_gallery
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.7
    - name: Terraform Init
      env:
        TF_LOG: trace
        WORK_DIR: /tmp/terraform/inage_gallery
      id: init
      run: terraform init --backend-config=./backends/backend.conf

    - name: Terraform Validate
      env:
        TF_LOG: trace
        WORK_DIR: /tmp/terraform/inage_gallery
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      env:
        TF_LOG: trace
        WORK_DIR: /tmp/terraform/inage_gallery
      id: plan
      run: terraform plan -no-color
      continue-on-error: true
    - uses: actions/github-script@v6
      env:
        TF_LOG: trace
        WORK_DIR: /tmp/terraform/inage_gallery
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
          <details><summary>Validation Output</summary>

          \`\`\`\n
          ${{ steps.validate.outputs.stdout }}
          \`\`\`

          </details>

          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>
    - name: Clean terraform directory
      run: rm -r /tmp/terraform
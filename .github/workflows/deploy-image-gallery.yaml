name: Deploy image gallery
on:
  workflow_call:
    inputs:
      environment:
        type: environment
    secrets:
      TFBACKEND:
        required: true
      TFSECRETVARS:
        required: true
env:
  TFVARS: ${{ vars.TFVARS }}

jobs:
  deploy_image_gallery:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    name: Deploy_image_gallery
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Move terraform folder
      run: mkdir -p /tmp/terraform && cp -Rv terraform/* /tmp/terraform
    - name: Inject secrets
      env:
        TFBACKEND: '${{ secrets.TFBACKEND }}'
        TFSECRETVARS: '${{ secrets.TFSECRETVARS }}'
        WORK_DIR: /tmp/terraform
      run: |
        echo "$TFBACKEND" | base64 --decode > $WORK_DIR/image_gallery/backends/backend.conf
        echo "$TFBACKEND" | base64 --decode > $WORK_DIR/node-dev/backends/backend.conf
        echo "$TFSECRETVARS" > $WORK_DIR/image_gallery/.auto.tfvars
        echo "$TFSECRETVARS" > $WORK_DIR/node-dev/.auto.tfvars
        echo "$TFVARS" > $WORK_DIR/image_gallery/terraform.tfvars
        echo "$TFVARS" > $WORK_DIR/node-dev/terraform.tfvars
    - name: Setup terraform
      env:
        WORK_DIR: /tmp/terraform/image_gallery
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.7
    - name: Terraform Init
      env:
        WORK_DIR: /tmp/terraform/image_gallery
      id: init
      run: cd $WORK_DIR && terraform init --backend-config=$WORK_DIR/backends/backend.conf

    - name: Terraform Validate
      env:
        WORK_DIR: /tmp/terraform/image_gallery
      id: validate
      run: cd $WORK_DIR && terraform validate -no-color

    - name: Terraform Apply
      env:
        WORK_DIR: /tmp/terraform/image_gallery
      id: plan
      run: cd $WORK_DIR && terraform apply -auto-approve -no-color
      continue-on-error: true
    - name: Clean terraform directory
      run: rm -r /tmp/terraform